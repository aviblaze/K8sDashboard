Started by user [8mha:////4PAqm/0S8uwo7BB/dVT9jP+3b1sB6/X0CJBIL40dHx9IAAAAnR+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAweoBn6pcWpRfpZqXnZmXnFiSm5mXkAJY29c8cAAAA=[0mjenkinsAdmin
Obtained Jenkinsfile from git https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform.git
[8mha:////4C523Psxf5KmqMGLKpdAWu8EGNUwv1LElISlb8ywArgWAAAAoh+LCAAAAAAAAP9tjTEOwjAQBM8BClpKHuFItIiK1krDC0x8GCfWnbEdkooX8TX+gCESFVvtrLSa5wtWKcKBo5UdUu8otU4GP9jS5Mixv3geZcdn2TIl9igbHBs2eJyx4YwwR1SwULBGaj0nRzbDRnX6rmuvydanHMu2V1A5c4MHCFXMWcf8hSnC9jqYxPTz/BXAFEIGsfuclm8zQVqFvQAAAA==[0m[Pipeline] Start of Pipeline
[8mha:////4FAOnIfAd+meDf4mlHk8A3ONmSQzxhtA33elHlZAOfiWAAAApR+LCAAAAAAAAP9tjTEOwjAUQ3+KOrAycohUghExsUZZOEFIQkgb/d8mKe3EibgadyBQiQlLlmxL1nu+oE4RjhQdby12HpP2vA+jK4lPFLtroIm3dOGaMFGwXNpJkrGnpUrKFhaxClYC1hZ1oOTRZdiIVt1VExS65pxj2Q4CKm8GeAAThZxVzN8yR9jeRpMIf5y/AJj7DGxXvP/86jduZBmjwAAAAA==[0m[Pipeline] node
Running on [8mha:////4NqhzOdp+jwzKFJQq74hVuo3GMUuyfkDHhbBp25xTisOAAAAoR+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAz2EgZR/eT83ILSktQifY2k0sycEt3MPE19AHHxbH3KAAAA[0mJenkins in /var/jenkins_home/workspace/DeployNgnix
[8mha:////4LCh6QzrZ5mdKdqG2dE8WabMzrARrunLqZbNTBNCp5azAAAApR+LCAAAAAAAAP9tjTEOwjAUQ3+KOrAycoh0gA0xsUZZOEFIQkgb/d8mKe3EibgadyBQiQlLlmxL1nu+oE4RjhQdby12HpP2vA+jK4lPFLtroIm3dOGaMFGwXNpJkrGnpUrKFhaxClYC1hZ1oOTRZdiIVt1VExS65pxj2Q4CKm8GeAAThZxVzN8yR9jeRpMIf5y/AJj7DGxXvP/86jfoP95RwAAAAA==[0m[Pipeline] {
[8mha:////4OVIWsQLl3yoC2FW4pcBtFwt4+z9imv8SfWO95ONI12fAAAApR+LCAAAAAAAAP9tjTEOwjAUQ3+KOrAycoh0gQkxsUZZOEFIQkgb/d8mKe3EibgadyBQiQlLlmxL1nu+oE4RjhQdby12HpP2vA+jK4lPFLtroIm3dOGaMFGwXNpJkrGnpUrKFhaxClYC1hZ1oOTRZdiIVt1VExS65pxj2Q4CKm8GeAAThZxVzN8yR9jeRpMIf5y/AJj7DGxXvP/86jc09154wAAAAA==[0m[Pipeline] stage
[8mha:////4DfE7MVfZCg9QPd2qKRkhDFfuSRsJHxxwPD2BgAdo9EVAAAApR+LCAAAAAAAAP9tjTEOwjAUQ3+KOrAycoh0ggUxsUZZOEFIQkgb/d8mKe3EibgadyBQiQlLlmxL1nu+oE4RjhQdby12HpP2vA+jK4lPFLtroIm3dOGaMFGwXNpJkrGnpUrKFhaxClYC1hZ1oOTRZdiIVt1VExS65pxj2Q4CKm8GeAAThZxVzN8yR9jeRpMIf5y/AJj7DGxXvP/86jek7ggRwAAAAA==[0m[Pipeline] { (Declarative: Checkout SCM)
[8mha:////4Myh9UTrzpMqI9Tw8JsoBOjOuLG6xULfj75sfhrHh1HvAAAAoh+LCAAAAAAAAP9tjTEOAiEURD9rLGwtPQTbaWGsbAmNJ0AWEZb8zwLrbuWJvJp3kLiJlZNMMm+a93rDOic4UbLcG+wdZu14DKOti0+U+lugiXu6ck2YKRguzSSpM+cFJRUDS1gDKwEbgzpQdmgLbIVXD9UGhba9lFS/o4DGdQM8gYlqLiqVL8wJdvexy4Q/z18BzLEA29ce4gfg7KmOvAAAAA==[0m[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/DeployNgnix/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform.git # timeout=10
Fetching upstream changes from https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform.git
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 21713c36fb15ff293b2718cb83630f7320e02c27 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 21713c36fb15ff293b2718cb83630f7320e02c27 # timeout=10
Commit message: "Added the commands to transeverse the directory."
 > git rev-list --no-walk 21713c36fb15ff293b2718cb83630f7320e02c27 # timeout=10
[8mha:////4HKtYKdx8djH7Lp4DTTuEEy2o68MxdXvXDmLRz5WKSAgAAAAoh+LCAAAAAAAAP9tjTEOAiEURD9rLGwtPQTbGRNjZUtoPAGyiLDkfxZYdytP5NW8g8RNrJxkknnTvNcb1jnBiZLl3mDvMGvHYxhtXXyi1N8CTdzTlWvCTMFwaSZJnTkvKKkYWMIaWAnYGNSBskNbYCu8eqg2KLTtpaT6HQU0rhvgCUxUc1GpfGFOsLuPXSb8ef4KYI6xADvU7j9Dg2gqvAAAAA==[0m[Pipeline] }
[8mha:////4G9q6sXIka0UvsooV1X+GQoZ7EDDcbXQkCgfERRKSTiZAAAAoh+LCAAAAAAAAP9tjTEOAiEURD9rLGwtPQRbWRhjZUtoPAGyiLDkfxZYdytP5NW8g8RNrJxkknnTvNcb1jnBiZLl3mDvMGvHYxhtXXyi1N8CTdzTlWvCTMFwaSZJnTkvKKkYWMIaWAnYGNSBskNbYCu8eqg2KLTtpaT6HQU0rhvgCUxUc1GpfGFOsLuPXSb8ef4KYI6xADvU7j9J+wGOvAAAAA==[0m[Pipeline] // stage
[8mha:////4BT0CXk7hlwHY1f+7hUgldnW6Ukx0gGjBPCE/0VcDagOAAAAph+LCAAAAAAAAP9tjTEOwjAQBM9BKWgpeYQDEh2iorXc8AITG+PEugv2haTiRXyNPxCIRMVWOyut5vmCMic4UPKycdgGzHWQXez91ORAqb1EGmRDZ1kTZopOajdosu44oyZ2MEcUsFCwdFhHygE9w0o15m6qaNBXJ07TtldQBHuDBwg1mdkk/sKYYH3tbSb8ef4KYOwYxI6h2G4+x/INtuQqUcEAAAA=[0m[Pipeline] withEnv
[8mha:////4DAsIOLeeuFT7/BEf4B1dgRxhy1pLNm9Lqy5QiMSj52DAAAApR+LCAAAAAAAAP9tjTEOwjAUQ3+DOrAycoiUzoiJNerCCUITQtLo/zZJSSdOxNW4Ay2VmPBg2Zas93pDGQOcKBjuNHYWY2t570czJ54pdDdPmTu68pYwkte80bkhpc9rbShpWFUw2AjYamw9RYsmwU44+ZCVl2iqSwrzdhTArBrgCYWYyUmG9C1TgP19VJHwx/kLgKlPwOrDYvXyLD8BobDcwgAAAA==[0m[Pipeline] {
[8mha:////4Cz/ZJN6TXiZ8IJLxzIARU2HG1kIuEG+od6B1JfEQLb0AAAAph+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUZUVMrFEWThCaEJJG/7dJSjpxIq7GHWipxIQHy7ZkvdcbqhjgRMEwp7GzGFvLej+aObFMobt5yszRlbWEkbxmQmdBSp/XKihpWFWUsOGw1dh6ihZNgh138iFrL9HUlxTm7cihtGqAJxR8JicZ0rdMAfb3UUXCH+cvAKY+Qdk0ix2WZ/UBbwyqm8IAAAA=[0m[Pipeline] stage
[8mha:////4IgvgW7f/0h5NGR/JdzFVDOE9HCdz3yjiFIQLe6C/goHAAAAph+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUwIiYukZZOEFoQkgb/V9+UtqJE3E17kBLJSY8WLYl673eUESGE7ETjcXWY6y96ELvpiQG4vYaaBANXURNGClYoeygyNhqqYqShUVZDisJa4t1oOjRJdjIRj90GTS68px42o4Scm/u8IRMTuSkOX3LyLC99SYS/jh/ATB2CfLdfrbD/Cw+y7kUycIAAAA=[0m[Pipeline] { (Declarative: Tool Install)
[8mha:////4B93wqXup8Oxj/InY5rMTfCokTR4SN//pxaZBxnSD6Z3AAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiBB2iSmu54QUmNsaJdWdsh6TiRXyNPxCIRMUWq51t5vmCZYpw5GixNdQ5So3D4Hs7LRw4dhfPA7Z8xoYpsTcozSBZm3pGydnAnKKEhYCVocZzcmQzrEWr7qryimx1ynH6DgJKp2/wgEJM5qxi/sIYYXPtdWL6ef4KYAwZyu3uU/vwBgq0rvS+AAAA[0m[Pipeline] tool
[8mha:////4BWEIDqW6+3/3ut51G9fUnLJrhDTLw9x1m+tuf4AvJ8cAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIihKgQVVrLDS8wsTFOrDtjOyQVL+Jr/IFAJCq2WO1sM88XLFOEI0eLraHOUWocBt/baeHAsbt4HrDlMzZMib1BaQbJ2tQzSs4G5hQlLASsDDWekyObYS1adVeVV2SrU47TdxBQOn2DBxRiMmcV8xfGCJtrrxPTz/NXAGPIUG53n9qHN0uFte2+AAAA[0m[Pipeline] envVarsForTool
[8mha:////4DKHTq72AxiTeB6UZEYMM1TvjK9PSfGaxTUSwf6F9kMKAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIihESDqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFBu95/avQEeFbpZvgAAAA==[0m[Pipeline] }
[8mha:////4I3HXFOLWj3rXiR7gnR0DXMqz6i/RruU+7a6x22emejgAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiaCgQVVrLDS8wsTFOrDtjOyQVL+Jr/IFAJCq2WO1sM88XLFOEI0eLraHOUWocBt/baeHAsbt4HrDlMzZMib1BaQbJ2tQzSs4G5hQlLASsDDWekyObYS1adVeVV2SrU47TdxBQOn2DBxRiMmcV8xfGCJtrrxPTz/NXAGMIGcrt/lO7Ny324eW+AAAA[0m[Pipeline] // stage
[8mha:////4BrF1ABiqvf9Qr1iV6I9fJ63EeYfQooo5mz14yFtk32qAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohU3ZAQE2uUhROEJoSk0f9tkpJOnIircQdaKjHhwbItWe/1hioGOFEwzGnsLMbWst6PZk4sU+hunjJzdGUtYSSvmdBZkNLntQpKGlYVJWw4bDW2nqJFk2DHnXzI2ks09SWFeTtyKK0a4AkFn8lJhvQtU4D9fVSR8Mf5C4CpT1A2zWKH5Vl9AAkvMTrCAAAA[0m[Pipeline] withEnv
[8mha:////4L1U0b0FBUTiIAPODeFNQ5LewIduqMMw6ep3ZI6bXNI5AAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUbCDE1DXKwglCE0La6P/yk9JOnIircQdaKjHhwbItWe/1hiIynIidaCy2HmPtRRd6NyUxELfXQINo6CJqwkjBCmUHRcZWS1WULCzKclhJWFusA0WPLsFGNvqhy6DRlefE03aUkHtzhydkciInzelbRobtrTeR8Mf5C4CxS5Dv9rMd5mfxASnCIIrCAAAA[0m[Pipeline] {
[8mha:////4Mp6fu1elF9XU0z7HzpEFMIb6jlchVgAAk7WQqzczfZcAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycogU2BDqxBp14QShCSFp9H9JUtKJE3E17kCgEhMeLNuS9Z4vqIKHhrxmVmFvMHSGDW7UObFEvr84SszSmXWEgZxirUotSXWca0tRwayihAWHpcLOUTCoI6y4FXdRO4G6PkWftwOH0sgbPKDgmRyFj98yeVhfRxkIf5y/AJiGCOV2n223+TyrN7xWSV3CAAAA[0m[Pipeline] stage
[8mha:////4E6e5Nd+nEdAO05pgr/RNUZEkb69uMqhmFEB9PmUjAG6AAAAph+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycogUWBFT1ygLJwhNCGmj/8tPSjtxIq7GHWipxIQHy7ZkvdcbishwInaisdh6jLUXXejdlMRA3F4DDaKhi6gJIwUrlB0UGVstVVGysCjLYSVhbbEOFD26BBvZ6Icug0ZXnhNP21FC7s0dnpDJiZw0p28ZGba33kTCH+cvAMYuQX7Yzbafn8UHbGnGmsIAAAA=[0m[Pipeline] { (Checkout)
[8mha:////4GMxO/fGbMdtegbwSBZNKZl5v3IwGO8v5hyQp5ejr+AVAAAAox+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIi0iIqWisNLzCJMXasO8d2cCpexNf4A4FIVGyx2tlmni9YxwBHDhqtot5QbA16N+p5YebQXx1ntHzBlimyU9io3HCnTgs2nBQsKUpYCdgoah1HQzrBVlh5l5WTpKtzCvN3EFCaboAHFGI2JxnSF6YAu9vYRaaf568AJp+grPefqv0bH7uiub4AAAA=[0m[Pipeline] tool
[8mha:////4J+BCGifuXo6YXZWM1uOqwh04qYltogXp08vzvHXJSkSAAAAox+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIioERUaS03vMDExjix7oztkFS8iK/xBwKRqNhitbPNPF+wTBGOHC22hjpHqXEYfG+nhQPH7uJ5wJbP2DAl9galGSRrU88oORuYU5SwELAy1HhOjmyGtWjVXVVeka1OOU7fQUDp9A0eUIjJnFXMXxgjbK69Tkw/z18BjCFDudt+ah/eXoq5oL4AAAA=[0m[Pipeline] envVarsForTool
[8mha:////4C37QQ71Ke2ytkN73V4GKsob2uhmMtgjIm6ljDv2NKBzAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUIDbE1DXKwglCE0La6P/yk9JOnIircQdaKjHhwbItWe/1hiIynIidaCy2HmPtRRd6NyUxELfXQINo6CJqwkjBCmUHRcZWS1WULCzKclhJWFusA0WPLsFGNvqhy6DRlefE03aUkHtzhydkciInzelbRobtrTeR8Mf5C4CxS5Dvd7Md5mfxAR8nhQvCAAAA[0m[Pipeline] withEnv
[8mha:////4LI9cH9MaLfo/jauKXZaVbSaUdpSUQcH68hTo3qfsOrIAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUQjAhpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYJ8t5/tMD+LD/hYjrHCAAAA[0m[Pipeline] {
[8mha:////4DJOTpTEOsa0S6U+3EmReeBk89qfQqaNCUcHb8eCVBEJAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiIUGDqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDhnK7+9Q+vAEIWoEpvgAAAA==[0m[Pipeline] git
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/DeployNgnix/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform # timeout=10
Fetching upstream changes from https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://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@github.com/SummitAIOrchs/IACUsing_Git_Jenkins_Terraform +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 21713c36fb15ff293b2718cb83630f7320e02c27 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 21713c36fb15ff293b2718cb83630f7320e02c27 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 21713c36fb15ff293b2718cb83630f7320e02c27 # timeout=10
Commit message: "Added the commands to transeverse the directory."
[8mha:////4FXwHpWbgZ0wvQAhJz8XsJ6uaJs/z46e5FEAFvX0thR+AAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiISEKRJXWcsMLTGyME+vO2A5JxYv4Gn8gEImKLVY728zzBcsU4cjRYmuoc5Qah8H3dlo4cOwungds+YwNU2JvUJpBsjb1jJKzgTlFCQsBK0ON5+TIZliLVt1V5RXZ6pTj9B0ElE7f4AGFmMxZxfyFMcLm2uvE9PP8FcAYQoZyu//U7g3QKkBhvgAAAA==[0m[Pipeline] }
[8mha:////4DDzaOKJhz7ukjP0XpRzZyAmdOHS3XiPSo/14CETmYD6AAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiIQokRJXWcsMLTGyME+vO2A5JxYv4Gn8gEImKLVY728zzBcsU4cjRYmuoc5Qah8H3dlo4cOwungds+YwNU2JvUJpBsjb1jJKzgTlFCQsBK0ON5+TIZliLVt1V5RXZ6pTj9B0ElE7f4AGFmMxZxfyFMcLm2uvE9PP8FcAYQoZyu//U7g2TqBHnvgAAAA==[0m[Pipeline] // withEnv
[8mha:////4EToTywfHtYBGdoMjZpVZcHrvt6jylGqaRDcAVyFPkKyAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIi6BCiSmu54QUmNsaJdWdsh6TiRXyNPxCIRMUWq51t5vmCZYpw5GixNdQ5So3D4Hs7LRw4dhfPA7Z8xoYpsTcozSBZm3pGydnAnKKEhYCVocZzcmQzrEWr7qryimx1ynH6DgJKp2/wgEJM5qxi/sIYYXPtdWL6ef4KYAwhQ7nbf2r7BrmPJ1y+AAAA[0m[Pipeline] }
[8mha:////4HTrpyZMfYgeo5PU+PKSoxE62JvNFJVo+hAXtnTU2iu3AAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOISQYmo0lppeIGJjXFi3RnbIal4EV/jD1hEomKL1c4283rDOgY4cTDYaxosxc6id6PJCycOw9XxhD1fsGOK7DS2empZ6WbBlpOGJUUJKwEbTZ3jaMkk2IpePmTlJJnqnEL+jgJKq+7whEJkc5IhfWEOsLuNKjL9PH8FMHufoDzUufb1B1PlWKq+AAAA[0m[Pipeline] // stage
[8mha:////4HUBUxnZLyV/9ew6mini5PKTyZMXKMhMyuvwLMLQnu6UAAAAqB+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUFRNCTF2jLpwgNCEkjf4vSUo6cSKuxh0IVGLCg2Vbst7zBVXwcCSvmVU4GAy9YaObdE4skR8ujhKzdGY9YSCnWKdSR1K1S+0oKlhUlLDisFbYOwoGdYQNt+IuaidQ16fo83bgUBp5gwcUPJOj8PFbZg/b6yQD4Y/zFwDzGKFs9tl2zedZvQGtjmIwwgAAAA==[0m[Pipeline] stage
[8mha:////4A1MBVJiAT+w20cP0cS5ukkhGGQmSG/zTNeEl6YlgN1aAAAAph+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUwIiYukZZOEFoQkgb/V9+UtqJE3E17kBLJSY8WLYl673eUESGE7ETjcXWY6y96ELvpiQG4vYaaBANXURNGClYoeygyNhqqYqShUVZDisJa4t1oOjRJdjIRj90GTS68px42o4Scm/u8IRMTuSkOX3LyLC99SYS/jh/ATB2CfLDbrb9/Cw+2YMO4MIAAAA=[0m[Pipeline] { (Terraform init)
[8mha:////4KgR1M1CqHq4c+LjjPdfjllvnp3wsMhp9QhrWAEsFwIFAAAAox+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIikRJR0VppeIFJjLFj3Tm2g1PxIr7GHwhEomKL1c4283zBOgY4ctBoFfWGYmvQu1HPCzOH/uo4o+ULtkyRncJG5YY7dVqw4aRgSVHCSsBGUes4GtIJtsLKu6ycJF2dU5i/g4DSdAM8oBCzOcmQvjAF2N3GLjL9PH8FMPkEZb3/VO3favo5XL4AAAA=[0m[Pipeline] tool
[8mha:////4JytS1Ks9r894bnFnOLTWNBvsFs4Y3xAeBrSDpeqWfiyAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiAR2iSmu54QUmNsaJdWdsh6TiRXyNPxCIRMUWq51t5vmCZYpw5GixNdQ5So3D4Hs7LRw4dhfPA7Z8xoYpsTcozSBZm3pGydnAnKKEhYCVocZzcmQzrEWr7qryimx1ynH6DgJKp2/wgEJM5qxi/sIYYXPtdWL6ef4KYAwZyt32U/vwBq1seBO+AAAA[0m[Pipeline] envVarsForTool
[8mha:////4INTgvxbOiUM1IMo4kSvWOpuHRwcSUV+NpPR+QCkdKzQAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUAjEhpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYJ8v5vtMD+LD2DV6WTCAAAA[0m[Pipeline] withEnv
[8mha:////4BRKwtuqY6SMd16Woyp/e1qNBu6SiEVXQKEPjBTFhgRfAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycoh0QLAgpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYJ8t5/tMD+LD02yRsvCAAAA[0m[Pipeline] {
[8mha:////4MVBrLVu6gVjcb9JBHH2Tx3SqqQeDRPGN2qV7dE1CszdAAAAqB+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycoh0QIIBMXWNsnCC0ISQNvq//KS0EyfiatyBlkpMeLBsS9Z7vaGIDCdiJxqLrcdYe9GF3k1JDMTtNdAgGrqImjBSsELZQZGx1VIVJQuLshxWEtYW60DRo0uwkY1+6DJodOU58bQdJeTe3OEJmZzISXP6lpFhe+tNJPxx/gJg7BLku/1sh/lZfADpB/iZwgAAAA==[0m[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[8mha:////4DEEkHGXB7gi2WBvq0ehTD/OUPMRSe1ZBzy3C0Hl5I48AAAAqB+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycoh0YAAJMXWNsnCC0ISQNvq//KS0EyfiatyBlkpMeLBsS9Z7vaGIDCdiJxqLrcdYe9GF3k1JDMTtNdAgGrqImjBSsELZQZGx1VIVJQuLshxWEtYW60DRo0uwkY1+6DJodOU58bQdJeTe3OEJmZzISXP6lpFhe+tNJPxx/gJg7BLku/1sh/lZfAD8aiCpwgAAAA==[0m[Pipeline] {
[8mha:////4IymjCvU/RcUhxuWahWLDuSf2hSyIttjTvTgZNPDj10XAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJS0IAQVVrLDS8wsTFOrDtjOyQVL+Jr/IFAJCq2WO1sM88XLFOEI0eLraHOUWocBt/baeHAsbt4HrDlMzZMib1BaQbJ2tQzSs4G5hQlLASsDDWekyObYS1adVeVV2SrU47TdxBQOn2DBxRiMmcV8xfGCJtrrxPTz/NXAGPIUG53n9qHN65NpgK+AAAA[0m[Pipeline] sh
+ set +x

[0m[1mInitializing the backend...[0m
[0m[1mInitializing modules...[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/tls from the dependency lock file
- Reusing previous version of hashicorp/template from the dependency lock file
- Reusing previous version of hashicorp/aws from the dependency lock file
- Reusing previous version of hashicorp/local from the dependency lock file
- Using previously-installed hashicorp/tls v4.0.4
- Using previously-installed hashicorp/template v2.2.0
- Using previously-installed hashicorp/aws v4.67.0
- Using previously-installed hashicorp/local v2.4.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[8mha:////4LKesSs8CGAbg/1DBEaewQbtTsO7ff+PZLVDLUjv8QcAAAAAph+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOKCBAUSSkVrueEFJjHGiXUXbAen4kV8jT9gEYmKLVY728zrDcvgoWZvsNPUWwqNxcGNJi9M7Pur44QdX7BhCuw0Sp0kt/o0o+SoYU5RwkLASlPjOFgyEdaiUw9VOUWmOkefv6OA0rZ3eEIhsjkqH78wedjcxjYw/Tx/BTANQ4Ryv821O3wArmI/eL4AAAA=[0m[Pipeline] }
[8mha:////4AIvVVFC0OCm1A8LrJgCcwZ9QibfZNst11+JJ76Yg1HhAAAAph+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiBBIFSkVrueEFJjHGiXUXbAen4kV8jT9gEYmKLVY728zrDcvgoWZvsNPUWwqNxcGNJi9M7Pur44QdX7BhCuw0Sp0kt/o0o+SoYU5RwkLASlPjOFgyEdaiUw9VOUWmOkefv6OA0rZ3eEIhsjkqH78wedjcxjYw/Tx/BTANQ4Ryv821O3wAmqzcI74AAAA=[0m[Pipeline] // withCredentials
[8mha:////4CuBtqjT7DB/R3VlXp2Bbowmxlf/DsT+Qoh1+j/lny2LAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiAaJBqWgtN7zAJMY4se6C7eBUvIiv8QcsIlGxxWpnm3m9YRk81OwNdpp6S6GxOLjR5IWJfX91nLDjCzZMgZ1GqZPkVp9mlBw1zClKWAhYaWocB0smwlp06qEqp8hU5+jzdxRQ2vYOTyhENkfl4xcmD5vb2Aamn+evAKZhiFDut7l2hw+i7k/SvgAAAA==[0m[Pipeline] }
[8mha:////4HIF84bIDwmLmeJjshwtCjo2RA2bpMktLoasam6dAnS5AAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJSBCpEldZKwwtMbIwT687YDknFi/gaf8AiEhVbrHa2mdcb1jHAiYPBXtNgKXYWvRtNXjhxGK6OJ+z5gh1TZKex1VPLSjcLtpw0LClKWAnYaOocR0smwVb08iErJ8lU5xTydxRQWnWHJxQim5MM6QtzgN1tVJHp5/krgNn7BOW+zlUfPr1sGoC+AAAA[0m[Pipeline] // withEnv
[8mha:////4BvAewpG73mQYRbkiJRjxhy6Ot/o88//iEQdepmijJ72AAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiQTpEldZKwwtMbIwT687YDknFi/gaf8AiEhVbrHa2mdcb1jHAiYPBXtNgKXYWvRtNXjhxGK6OJ+z5gh1TZKex1VPLSjcLtpw0LClKWAnYaOocR0smwVb08iErJ8lU5xTydxRQWnWHJxQim5MM6QtzgN1tVJHp5/krgNn7BGVd5zrsP6bJewO+AAAA[0m[Pipeline] }
[8mha:////4OPa9qODalY/jrEBXZUUYvQ081m+S57WqEVJVAzrhCfrAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiBFQoFa3lhheYxBgn1l2wHZyKF/E1/oBFJCq2WO1sM683LIOHmr3BTlNvKTQWBzeavDCx76+OE3Z8wYYpsNModZLc6tOMkqOGOUUJCwErTY3jYMlEWItOPVTlFJnqHH3+jgJK297hCYXI5qh8/MLkYXMb28D08/wVwDQMEcr9Iddu+wG5Sy5RvgAAAA==[0m[Pipeline] // stage
[8mha:////4BJToqTYzAAEoJsHs0DRVQgrl3aXLZj9ZljMOm37ll92AAAAqB+LCAAAAAAAAP9tjUEKwjAURH8rXbh16SFSBBFEunIbuvEEsYkxafi/JqnpyhN5Ne9gtODKWQwzA8N7vqAKHhrymlmFvcHQGTa4UefEEvn+4igxS2fWEQZyirUqtSTVca4tRQWzihIWHJYKO0fBoI6w4lbcRe0E6voUfd4OHEojb/CAgmdyFD5+y+RhfR1lIPxx/gJgGiKUm3227e7zrN6bgMDowgAAAA==[0m[Pipeline] stage
[8mha:////4FI+zWUQEsMzPlyk4ohb3pgxhHlSNYuUXX8vD6h8YGmYAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycoh0QTAgpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYJ8t5/tMD+LD+jQxyjCAAAA[0m[Pipeline] { (Terraform action)
[8mha:////4HjbVKB2dbc74OyF/Pzqv993yikHDPEkq5aMT8LA7enGAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOLSIIGEqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDhnK7+9Q+vAGaE3/ivgAAAA==[0m[Pipeline] tool
[8mha:////4KkY8oA7bEOeXze8B6J5iqg81fUOVvxIUQSqxy1D9SBAAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOLSICGEqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDhnK7+9Q+vAHbImT7vgAAAA==[0m[Pipeline] envVarsForTool
[8mha:////4LHaLXzlf1vgzcC2/r/ou6K60F6O334c68o1J7uI0D8lAAAAqB+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycoiUAcSAOrFGXThBaEJIGv1fkpR04kRcjTsQqMSEB8u2ZL3nC6rgoSGvmVXYGwydYYMbdU4ske8vjhKzdGYdYSCnWKtSS1Id59pSVDCrKGHBYamwcxQM6ggrbsVd1E6grk/R5+3AoTTyBg8oeCZH4eO3TB7W11EGwh/nLwCmIUK53WfbbT7P6g0kNDtSwgAAAA==[0m[Pipeline] withEnv
[8mha:////4ANOzhNKsd85LF8DIhPzeg/9aq425q2LqE+njtF6h9uDAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycogUBibE1DXKwglCE0La6P/yk9JOnIircQdaKjHhwbItWe/1hiIynIidaCy2HmPtRRd6NyUxELfXQINo6CJqwkjBCmUHRcZWS1WULCzKclhJWFusA0WPLsFGNvqhy6DRlefE03aUkHtzhydkciInzelbRobtrTeR8Mf5C4CxS5AfdrPt52fxAW2++SvCAAAA[0m[Pipeline] {
[8mha:////4AxAYyTTjMSh+mUk7vYP/4K4kDGzPqt/6P0LgggUa+JCAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUIDEhpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYL8sJttPz+LDwMT42zCAAAA[0m[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[8mha:////4FwaXce8POi4J7Kh/F+vcMAh89IlVQdSeoRkr/+04XYmAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUAjEhpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYL8sJttPz+LD6emXT7CAAAA[0m[Pipeline] {
[8mha:////4LFS0rLq4bkwOSc4/t71mPuM2gAL3EorBjZnyuvTuyhxAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJSABWiSmu54QUmNsaJdWdsh6TiRXyNPxCIRMUWq51t5vmCZYpw5GixNdQ5So3D4Hs7LRw4dhfPA7Z8xoYpsTcozSBZm3pGydnAnKKEhYCVocZzcmQzrEWr7qryimx1ynH6DgJKp2/wgEJM5qxi/sIYYXPtdWL6ef4KYAwZyv32U7vwBiwS7Xe+AAAA[0m[Pipeline] sh
+ set +x
[0m[1mmodule.MultiZone[0].module.SingleZone.tls_private_key.pk: Refreshing state... [id=54b185bc44a4d6d937749b609bda67329c1ee211][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.template_file.user_data: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.template_file.user_data: Reading...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.template_file.user_data: Read complete after 0s [id=3ab6d30bd0670f99cbfb248f5131f28addecda20c25445d630cf07012eafe5a4][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.template_file.user_data: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.template_file.user_data: Read complete after 0s [id=3ab6d30bd0670f99cbfb248f5131f28addecda20c25445d630cf07012eafe5a4][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.template_file.user_data: Read complete after 0s [id=3ab6d30bd0670f99cbfb248f5131f28addecda20c25445d630cf07012eafe5a4][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.local_file.ssh_key: Refreshing state... [id=4fa7b487372dfa9a671f2965f9e9cbbe121925c5][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_availability_zones.Azs: Reading...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_ami.amazon-2: Reading...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_ami.amazon-2: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_availability_zones.Azs: Reading...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_availability_zones.Azs: Read complete after 0s [id=ap-northeast-3][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_ami.amazon-2: Read complete after 0s [id=ami-09801846ce800df60][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Read complete after 1s [id=ecsInstanceRole][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_availability_zones.Azs: Reading...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_key_pair.kp: Refreshing state... [id=key-20230615060029-0.pem][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_vpc.vpc[0]: Refreshing state... [id=vpc-06200b3b9cdbd6506][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Reading...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_ami.amazon-2: Reading...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Read complete after 1s [id=ecsInstanceRole][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_availability_zones.Azs: Read complete after 1s [id=ca-central-1][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.data.aws_ami.amazon-2: Read complete after 1s [id=ami-0fd3cdb569345967e][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_iam_role.ec2iamprofile: Read complete after 1s [id=ecsInstanceRole][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_availability_zones.Azs: Read complete after 1s [id=us-east-1][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.data.aws_ami.amazon-2: Read complete after 1s [id=ami-04dd3966dd460bfa0][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_internet_gateway.igw[0]: Refreshing state... [id=igw-0259e4673fa997e22][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_default_security_group.default[0]: Refreshing state... [id=sg-0f25310b915a1baba][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[0]: Refreshing state... [id=subnet-0c1902ffeb6275528][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Refreshing state... [id=rtb-0c2b2fa7a3cb76d61][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Refreshing state... [id=i-0957e1b2766c5ab13][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [33m~[0m update in-place[0m
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # aws_globalaccelerator_accelerator.globalacc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_globalaccelerator_accelerator" "globalacc" {
      [32m+[0m[0m dns_name            = (known after apply)
      [32m+[0m[0m dual_stack_dns_name = (known after apply)
      [32m+[0m[0m enabled             = true
      [32m+[0m[0m hosted_zone_id      = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m ip_address_type     = "IPV4"
      [32m+[0m[0m ip_sets             = (known after apply)
      [32m+[0m[0m name                = (known after apply)
      [32m+[0m[0m tags_all            = (known after apply)
    }

[1m  # aws_globalaccelerator_endpoint_group.glbaccegrp[0][0m will be created
[0m  [32m+[0m[0m resource "aws_globalaccelerator_endpoint_group" "glbaccegrp" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m endpoint_group_region         = "us-east-1"
      [32m+[0m[0m health_check_interval_seconds = 30
      [32m+[0m[0m health_check_path             = (known after apply)
      [32m+[0m[0m health_check_port             = (known after apply)
      [32m+[0m[0m health_check_protocol         = "TCP"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m listener_arn                  = (known after apply)
      [32m+[0m[0m threshold_count               = 3
      [32m+[0m[0m traffic_dial_percentage       = 100

      [32m+[0m[0m endpoint_configuration {
          [32m+[0m[0m client_ip_preservation_enabled = (known after apply)
          [32m+[0m[0m endpoint_id                    = (known after apply)
          [32m+[0m[0m weight                         = 100
        }
    }

[1m  # aws_globalaccelerator_endpoint_group.glbaccegrp[1][0m will be created
[0m  [32m+[0m[0m resource "aws_globalaccelerator_endpoint_group" "glbaccegrp" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m endpoint_group_region         = "ap-northeast-3"
      [32m+[0m[0m health_check_interval_seconds = 30
      [32m+[0m[0m health_check_path             = (known after apply)
      [32m+[0m[0m health_check_port             = (known after apply)
      [32m+[0m[0m health_check_protocol         = "TCP"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m listener_arn                  = (known after apply)
      [32m+[0m[0m threshold_count               = 3
      [32m+[0m[0m traffic_dial_percentage       = 100

      [32m+[0m[0m endpoint_configuration {
          [32m+[0m[0m client_ip_preservation_enabled = (known after apply)
          [32m+[0m[0m endpoint_id                    = (known after apply)
          [32m+[0m[0m weight                         = 100
        }
    }

[1m  # aws_globalaccelerator_endpoint_group.glbaccegrp[2][0m will be created
[0m  [32m+[0m[0m resource "aws_globalaccelerator_endpoint_group" "glbaccegrp" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m endpoint_group_region         = "ca-central-1"
      [32m+[0m[0m health_check_interval_seconds = 30
      [32m+[0m[0m health_check_path             = (known after apply)
      [32m+[0m[0m health_check_port             = (known after apply)
      [32m+[0m[0m health_check_protocol         = "TCP"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m listener_arn                  = (known after apply)
      [32m+[0m[0m threshold_count               = 3
      [32m+[0m[0m traffic_dial_percentage       = 100

      [32m+[0m[0m endpoint_configuration {
          [32m+[0m[0m client_ip_preservation_enabled = (known after apply)
          [32m+[0m[0m endpoint_id                    = (known after apply)
          [32m+[0m[0m weight                         = 100
        }
    }

[1m  # aws_globalaccelerator_listener.glbacclist[0][0m will be created
[0m  [32m+[0m[0m resource "aws_globalaccelerator_listener" "glbacclist" {
      [32m+[0m[0m accelerator_arn = (known after apply)
      [32m+[0m[0m client_affinity = "NONE"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m protocol        = "TCP"

      [32m+[0m[0m port_range {
          [32m+[0m[0m from_port = 80
          [32m+[0m[0m to_port   = 80
        }
    }

[1m  # module.MultiZone[0].aws_lb.alb[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "alb" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = (known after apply)
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags                                        = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # module.MultiZone[0].aws_lb_listener.httplistener[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "httplistener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.MultiZone[0].aws_lb_target_group.lbtg[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "lbtg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = "vpc-06200b3b9cdbd6506"

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = (known after apply)
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "80"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 10
          [32m+[0m[0m unhealthy_threshold = 3
        }
    }

[1m  # module.MultiZone[0].aws_lb_target_group_attachment.lbtga[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone[0].aws_lb_target_group_attachment.lbtga[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone[0].aws_lb_target_group_attachment.lbtga[2][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone1[0].aws_lb.alb[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "alb" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = (known after apply)
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags                                        = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # module.MultiZone1[0].aws_lb_listener.httplistener[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "httplistener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.MultiZone1[0].aws_lb_target_group.lbtg[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "lbtg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = (known after apply)
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "80"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 10
          [32m+[0m[0m unhealthy_threshold = 3
        }
    }

[1m  # module.MultiZone1[0].aws_lb_target_group_attachment.lbtga[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone1[0].aws_lb_target_group_attachment.lbtga[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone1[0].aws_lb_target_group_attachment.lbtga[2][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone2[0].aws_lb.alb[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "alb" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = (known after apply)
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags                                        = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # module.MultiZone2[0].aws_lb_listener.httplistener[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "httplistener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.MultiZone2[0].aws_lb_target_group.lbtg[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "lbtg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = (known after apply)
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "80"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 10
          [32m+[0m[0m unhealthy_threshold = 3
        }
    }

[1m  # module.MultiZone2[0].aws_lb_target_group_attachment.lbtga[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone2[0].aws_lb_target_group_attachment.lbtga[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "lbtga" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m port             = 80
      [32m+[0m[0m target_group_arn = (known after apply)
      [32m+[0m[0m target_id        = (known after apply)
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_default_route_table.def-rtb[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_default_route_table" "def-rtb" {
        id                     = "rtb-0c2b2fa7a3cb76d61"
      [33m~[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "defaultrtb-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "defaultrtb-20230615060029-0-0"
        } -> (known after apply)
        [90m# (6 unchanged attributes hidden)[0m[0m
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_instance.instance[0][0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_instance" "instance" {
      [33m~[0m[0m arn                                  = "arn:aws:ec2:us-east-1:428411933129:instance/i-0957e1b2766c5ab13" -> (known after apply)
      [33m~[0m[0m associate_public_ip_address          = true [33m->[0m[0m false [31m# forces replacement[0m[0m
      [33m~[0m[0m availability_zone                    = "us-east-1a" -> (known after apply)
      [33m~[0m[0m cpu_core_count                       = 1 -> (known after apply)
      [33m~[0m[0m cpu_threads_per_core                 = 1 -> (known after apply)
      [33m~[0m[0m disable_api_stop                     = false -> (known after apply)
      [33m~[0m[0m disable_api_termination              = false -> (known after apply)
      [33m~[0m[0m ebs_optimized                        = false -> (known after apply)
      [31m-[0m[0m hibernation                          = false [90m-> null[0m[0m
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [33m~[0m[0m id                                   = "i-0957e1b2766c5ab13" -> (known after apply)
      [33m~[0m[0m instance_initiated_shutdown_behavior = "stop" -> (known after apply)
      [33m~[0m[0m instance_state                       = "running" -> (known after apply)
      [33m~[0m[0m ipv6_address_count                   = 0 -> (known after apply)
      [33m~[0m[0m ipv6_addresses                       = [] -> (known after apply)
      [33m~[0m[0m key_name                             = "key-20230615060029-0.pem" [31m# forces replacement[0m[0m -> (known after apply) [31m# forces replacement[0m[0m
      [33m~[0m[0m monitoring                           = false -> (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [33m~[0m[0m placement_partition_number           = 0 -> (known after apply)
      [33m~[0m[0m primary_network_interface_id         = "eni-0703ef5706a3b6c25" -> (known after apply)
      [33m~[0m[0m private_dns                          = "ip-10-0-1-48.ec2.internal" -> (known after apply)
      [33m~[0m[0m private_ip                           = "10.0.1.48" -> (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [33m~[0m[0m public_ip                            = "44.201.172.140" -> (known after apply)
      [33m~[0m[0m secondary_private_ips                = [] -> (known after apply)
      [33m~[0m[0m security_groups                      = [ [31m# forces replacement[0m[0m
          [32m+[0m[0m "sg-0f25310b915a1baba",
        ]
      [33m~[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "instance-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "instance-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tenancy                              = "default" -> (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [33m~[0m[0m vpc_security_group_ids               = [
          [31m-[0m[0m "sg-0f25310b915a1baba",
        ] -> (known after apply)
        [90m# (8 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m capacity_reservation_specification {
          [31m-[0m[0m capacity_reservation_preference = "open" [90m-> null[0m[0m
        }

      [31m-[0m[0m cpu_options {
          [31m-[0m[0m core_count       = 1 [90m-> null[0m[0m
          [31m-[0m[0m threads_per_core = 1 [90m-> null[0m[0m
        }

      [31m-[0m[0m credit_specification {
          [31m-[0m[0m cpu_credits = "standard" [90m-> null[0m[0m
        }

      [31m-[0m[0m enclave_options {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m maintenance_options {
          [31m-[0m[0m auto_recovery = "default" [90m-> null[0m[0m
        }

      [31m-[0m[0m metadata_options {
          [31m-[0m[0m http_endpoint               = "enabled" [90m-> null[0m[0m
          [31m-[0m[0m http_put_response_hop_limit = 1 [90m-> null[0m[0m
          [31m-[0m[0m http_tokens                 = "optional" [90m-> null[0m[0m
          [31m-[0m[0m instance_metadata_tags      = "disabled" [90m-> null[0m[0m
        }

      [31m-[0m[0m private_dns_name_options {
          [31m-[0m[0m enable_resource_name_dns_a_record    = false [90m-> null[0m[0m
          [31m-[0m[0m enable_resource_name_dns_aaaa_record = false [90m-> null[0m[0m
          [31m-[0m[0m hostname_type                        = "ip-name" [90m-> null[0m[0m
        }

      [31m-[0m[0m root_block_device {
          [31m-[0m[0m delete_on_termination = true [90m-> null[0m[0m
          [31m-[0m[0m device_name           = "/dev/xvda" [90m-> null[0m[0m
          [31m-[0m[0m encrypted             = false [90m-> null[0m[0m
          [31m-[0m[0m iops                  = 0 [90m-> null[0m[0m
          [31m-[0m[0m tags                  = {} [90m-> null[0m[0m
          [31m-[0m[0m throughput            = 0 [90m-> null[0m[0m
          [31m-[0m[0m volume_id             = "vol-02c0191aac01959f2" [90m-> null[0m[0m
          [31m-[0m[0m volume_size           = 8 [90m-> null[0m[0m
          [31m-[0m[0m volume_type           = "standard" [90m-> null[0m[0m
        }
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_instance.instance[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-04dd3966dd460bfa0"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = [
          [32m+[0m[0m "sg-0f25310b915a1baba",
        ]
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_instance.instance[2][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-04dd3966dd460bfa0"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = [
          [32m+[0m[0m "sg-0f25310b915a1baba",
        ]
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_internet_gateway.igw[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_internet_gateway" "igw" {
        id       = "igw-0259e4673fa997e22"
      [33m~[0m[0m tags     = {
          [31m-[0m[0m "Name" = "internet-gateway-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tags_all = {
          [31m-[0m[0m "Name" = "internet-gateway-20230615060029-0-0"
        } -> (known after apply)
        [90m# (3 unchanged attributes hidden)[0m[0m
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_key_pair.kp[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_key_pair" "kp" {
      [33m~[0m[0m arn             = "arn:aws:ec2:us-east-1:428411933129:key-pair/key-20230615060029-0.pem" -> (known after apply)
      [33m~[0m[0m fingerprint     = "00:e0:7a:89:7a:ca:71:3b:9b:81:ff:3b:e8:c8:87:71" -> (known after apply)
      [33m~[0m[0m id              = "key-20230615060029-0.pem" -> (known after apply)
      [33m~[0m[0m key_name        = "key-20230615060029-0.pem" [31m# forces replacement[0m[0m -> (known after apply) [31m# forces replacement[0m[0m
      [32m+[0m[0m key_name_prefix = (known after apply)
      [33m~[0m[0m key_pair_id     = "key-036a8cc048e183527" -> (known after apply)
      [33m~[0m[0m key_type        = "rsa" -> (known after apply)
      [31m-[0m[0m tags            = {} [90m-> null[0m[0m
      [33m~[0m[0m tags_all        = {} -> (known after apply)
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_subnet.subnet[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_subnet" "subnet" {
        id                                             = "subnet-0c1902ffeb6275528"
      [33m~[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "subnet-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "subnet-20230615060029-0-0"
        } -> (known after apply)
        [90m# (15 unchanged attributes hidden)[0m[0m
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_subnet.subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = "vpc-06200b3b9cdbd6506"
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_subnet.subnet[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = "vpc-06200b3b9cdbd6506"
    }

[1m  # module.MultiZone[0].module.SingleZone.aws_vpc.vpc[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_vpc" "vpc" {
        id                                   = "vpc-06200b3b9cdbd6506"
      [33m~[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "vpc-20230615060029-0-0"
        } -> (known after apply)
      [33m~[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "vpc-20230615060029-0-0"
        } -> (known after apply)
        [90m# (16 unchanged attributes hidden)[0m[0m
    }

[1m  # module.MultiZone[0].module.SingleZone.local_file.ssh_key[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "local_file" "ssh_key" {
      [33m~[0m[0m content_base64sha256 = "E6mbBMLkd4hKECr47vLuoLYOVDwtBx/JZa+zch6F/7Y=" -> (known after apply)
      [33m~[0m[0m content_base64sha512 = "sywg2acg7DZTCC6deFxSlUPsJ4FIu1ttz7TyRdj1PUTHmoXjsTjANbnAwlt8ceu3RgSOhfJovfgRMcJsckXRXQ==" -> (known after apply)
      [33m~[0m[0m content_md5          = "18c0a38416f639c7b03963c7f7f2e1f0" -> (known after apply)
      [33m~[0m[0m content_sha1         = "4fa7b487372dfa9a671f2965f9e9cbbe121925c5" -> (known after apply)
      [33m~[0m[0m content_sha256       = "13a99b04c2e477884a102af8eef2eea0b60e543c2d071fc965afb3721e85ffb6" -> (known after apply)
      [33m~[0m[0m content_sha512       = "b32c20d9a720ec3653082e9d785c529543ec278148bb5b6dcfb4f245d8f53d44c79a85e3b138c035b9c0c25b7c71ebb746048e85f268bdf81131c26c7245d15d" -> (known after apply)
      [33m~[0m[0m filename             = "key-20230615060029-0.pem" [31m# forces replacement[0m[0m -> (known after apply) [31m# forces replacement[0m[0m
      [33m~[0m[0m id                   = "4fa7b487372dfa9a671f2965f9e9cbbe121925c5" -> (known after apply)
        [90m# (3 unchanged attributes hidden)[0m[0m
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_default_route_table.def-rtb[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "def-rtb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m instance_id                = ""
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_default_security_group.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_instance.instance[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-09801846ce800df60"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_instance.instance[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-09801846ce800df60"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_instance.instance[2][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-09801846ce800df60"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_internet_gateway.igw[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_key_pair.kp[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "kp" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = (known after apply)
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_subnet.subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-northeast-3a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_subnet.subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-northeast-3b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_subnet.subnet[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-northeast-3c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.aws_vpc.vpc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.local_file.ssh_key[0m will be created
[0m  [32m+[0m[0m resource "local_file" "ssh_key" {
      [32m+[0m[0m content              = (sensitive value)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0600"
      [32m+[0m[0m filename             = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.MultiZone1[0].module.SingleZone.tls_private_key.pk[0m will be created
[0m  [32m+[0m[0m resource "tls_private_key" "pk" {
      [32m+[0m[0m algorithm                     = "RSA"
      [32m+[0m[0m ecdsa_curve                   = "P224"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m private_key_openssh           = (sensitive value)
      [32m+[0m[0m private_key_pem               = (sensitive value)
      [32m+[0m[0m private_key_pem_pkcs8         = (sensitive value)
      [32m+[0m[0m public_key_fingerprint_md5    = (known after apply)
      [32m+[0m[0m public_key_fingerprint_sha256 = (known after apply)
      [32m+[0m[0m public_key_openssh            = (known after apply)
      [32m+[0m[0m public_key_pem                = (known after apply)
      [32m+[0m[0m rsa_bits                      = 4096
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_default_route_table.def-rtb[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "def-rtb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m instance_id                = ""
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_default_security_group.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_instance.instance[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-0fd3cdb569345967e"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_instance.instance[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "instance" {
      [32m+[0m[0m ami                                  = "ami-0fd3cdb569345967e"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ecsInstanceRole"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = (known after apply)
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "32d28e074e1a874fd8af2ebce86099de7d656321"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_internet_gateway.igw[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_key_pair.kp[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "kp" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = (known after apply)
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_subnet.subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ca-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_subnet.subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ca-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.aws_vpc.vpc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.local_file.ssh_key[0m will be created
[0m  [32m+[0m[0m resource "local_file" "ssh_key" {
      [32m+[0m[0m content              = (sensitive value)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0600"
      [32m+[0m[0m filename             = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.MultiZone2[0].module.SingleZone.tls_private_key.pk[0m will be created
[0m  [32m+[0m[0m resource "tls_private_key" "pk" {
      [32m+[0m[0m algorithm                     = "RSA"
      [32m+[0m[0m ecdsa_curve                   = "P224"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m private_key_openssh           = (sensitive value)
      [32m+[0m[0m private_key_pem               = (sensitive value)
      [32m+[0m[0m private_key_pem_pkcs8         = (sensitive value)
      [32m+[0m[0m public_key_fingerprint_md5    = (known after apply)
      [32m+[0m[0m public_key_fingerprint_sha256 = (known after apply)
      [32m+[0m[0m public_key_openssh            = (known after apply)
      [32m+[0m[0m public_key_pem                = (known after apply)
      [32m+[0m[0m rsa_bits                      = 4096
    }

[1mPlan:[0m 53 to add, 4 to change, 3 to destroy.
[0m
Changes to Outputs:
  [33m~[0m[0m ec2_ids                = [
      [31m-[0m[0m "i-0957e1b2766c5ab13",
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [33m~[0m[0m global_accelerator_arn = [
      [32m+[0m[0m (known after apply),
    ]
  [33m~[0m[0m lb_arns                = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [33m~[0m[0m subnet_ids             = [
        "subnet-0c1902ffeb6275528",
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [33m~[0m[0m vpc_ids                = [
        "vpc-06200b3b9cdbd6506",
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
[0m[1mmodule.MultiZone[0].module.SingleZone.local_file.ssh_key: Destroying... [id=4fa7b487372dfa9a671f2965f9e9cbbe121925c5][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.local_file.ssh_key: Destruction complete after 0s[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.local_file.ssh_key: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.tls_private_key.pk: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.local_file.ssh_key: Creation complete after 0s [id=4fa7b487372dfa9a671f2965f9e9cbbe121925c5][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.tls_private_key.pk: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_vpc.vpc[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_vpc.vpc[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.tls_private_key.pk: Creation complete after 1s [id=e404ae04d288505c5448c6957f11a74fd0ffc47a][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_key_pair.kp: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.local_file.ssh_key: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.local_file.ssh_key: Creation complete after 0s [id=bcf641d816d1ab1a51430f6c6f02a2c6cf12f228][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Destroying... [id=i-0957e1b2766c5ab13][0m[0m
[0m[1maws_globalaccelerator_accelerator.globalacc[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_key_pair.kp: Creation complete after 2s [id=key-20230615060344-2.pem][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_vpc.vpc[0]: Creation complete after 3s [id=vpc-0a3b39258cd64e603][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_default_security_group.default[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_internet_gateway.igw[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[2]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb_target_group.lbtg[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_internet_gateway.igw[0]: Creation complete after 0s [id=igw-037fccc38bf815b12][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[0]: Creation complete after 0s [id=subnet-0e672d307c6eabd81][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[1]: Creation complete after 0s [id=subnet-04a14eaf642090a93][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_subnet.subnet[2]: Creation complete after 1s [id=subnet-02bef908426693cda][0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.tls_private_key.pk: Creation complete after 6s [id=543539ac7e3efa31f39592320ef50c5f9535291d][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Creation complete after 2s [id=rtb-01ceb4f2166b4abbf][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_key_pair.kp: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.local_file.ssh_key: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.local_file.ssh_key: Creation complete after 0s [id=12102708d39419abd5ebe7752e4c62da93d406ef][0m
[0m[1mmodule.MultiZone1[0].aws_lb_target_group.lbtg[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:ap-northeast-3:428411933129:targetgroup/lb-tgrp-20230615060344-1-0/99bb829c870d29a1][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_default_security_group.default[0]: Creation complete after 3s [id=sg-00f299940441e7e13][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_key_pair.kp: Creation complete after 0s [id=key-20230615060344-1.pem][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[2]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_vpc.vpc[0]: Creation complete after 5s [id=vpc-02ec2a5fc7d4cdb7f][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_internet_gateway.igw[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_default_security_group.default[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_subnet.subnet[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_subnet.subnet[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group.lbtg[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_internet_gateway.igw[0]: Creation complete after 2s [id=igw-03c62dcfc55ea822c][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_subnet.subnet[1]: Creation complete after 2s [id=subnet-05c931cd23001c31d][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_subnet.subnet[0]: Creation complete after 2s [id=subnet-070d963ac59c8a4f2][0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Creation complete after 2s [id=rtb-00808d2761b5ae07c][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_default_security_group.default[0]: Creation complete after 4s [id=sg-0a70fd76947a023f4][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group.lbtg[0]: Creation complete after 4s [id=arn:aws:elasticloadbalancing:ca-central-1:428411933129:targetgroup/lb-tgrp-20230615060344-2-0/8ea154e411c5f2aa][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still destroying... [id=i-0957e1b2766c5ab13, 10s elapsed][0m[0m
[0m[1maws_globalaccelerator_accelerator.globalacc[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still destroying... [id=i-0957e1b2766c5ab13, 20s elapsed][0m[0m
[0m[1maws_globalaccelerator_accelerator.globalacc[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_globalaccelerator_accelerator.globalacc[0]: Creation complete after 28s [id=arn:aws:globalaccelerator::428411933129:accelerator/d1ab3f2c-61a5-4164-9019-6339944b61b9][0m
[0m[1maws_globalaccelerator_listener.glbacclist[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[1]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still destroying... [id=i-0957e1b2766c5ab13, 30s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_globalaccelerator_listener.glbacclist[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[1]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still destroying... [id=i-0957e1b2766c5ab13, 40s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[1]: Creation complete after 35s [id=i-09ad4d628516402fe][0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].module.SingleZone.aws_instance.instance[0]: Creation complete after 43s [id=i-01ad53791655e45e0][0m
[0m[1maws_globalaccelerator_listener.glbacclist[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still destroying... [id=i-0957e1b2766c5ab13, 50s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Destruction complete after 53s[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_key_pair.kp: Destroying... [id=key-20230615060029-0.pem][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_vpc.vpc[0]: Modifying... [id=vpc-06200b3b9cdbd6506][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_key_pair.kp: Destruction complete after 0s[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_key_pair.kp: Creating...[0m[0m
[0m[1maws_globalaccelerator_listener.glbacclist[0]: Creation complete after 26s [id=arn:aws:globalaccelerator::428411933129:accelerator/d1ab3f2c-61a5-4164-9019-6339944b61b9/listener/9e63f81d][0m
[0m[1mmodule.MultiZone2[0].module.SingleZone.aws_instance.instance[0]: Creation complete after 46s [id=i-0445d2a2ee8534518][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_key_pair.kp: Creation complete after 1s [id=key-20230615060344-0.pem][0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_vpc.vpc[0]: Modifications complete after 4s [id=vpc-06200b3b9cdbd6506][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[2]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group.lbtg[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_internet_gateway.igw[0]: Modifying... [id=igw-0259e4673fa997e22][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[0]: Modifying... [id=subnet-0c1902ffeb6275528][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_internet_gateway.igw[0]: Modifications complete after 1s [id=igw-0259e4673fa997e22][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Modifying... [id=rtb-0c2b2fa7a3cb76d61][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[0]: Modifications complete after 1s [id=subnet-0c1902ffeb6275528][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[1]: Creation complete after 1s [id=subnet-04884f7673d9b48c1][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_subnet.subnet[2]: Creation complete after 1s [id=subnet-06b038deca85cc7b3][0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[2]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_default_route_table.def-rtb[0]: Modifications complete after 0s [id=rtb-0c2b2fa7a3cb76d61][0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group.lbtg[0]: Creation complete after 4s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:targetgroup/lb-tgrp-20230615060344-0-0/098bca20ec595a6b][0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[2]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[2]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[2]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[2]: Creation complete after 36s [id=i-0b3315b1a94f5e04b][0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[0]: Creation complete after 36s [id=i-0b437d785e81795b5][0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].module.SingleZone.aws_instance.instance[1]: Creation complete after 46s [id=i-06c5509b39ff0a40f][0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb.alb[0]: Creation complete after 2m2s [id=arn:aws:elasticloadbalancing:ap-northeast-3:428411933129:loadbalancer/app/alb-20230615060344-1-0/24c86e27abf17f97][0m
[0m[1mmodule.MultiZone1[0].aws_lb_listener.httplistener[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone1[0].aws_lb_listener.httplistener[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:ap-northeast-3:428411933129:listener/app/alb-20230615060344-1-0/24c86e27abf17f97/6c9b7021f7cbd11b][0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb.alb[0]: Creation complete after 2m16s [id=arn:aws:elasticloadbalancing:ca-central-1:428411933129:loadbalancer/app/alb-20230615060344-2-0/9ef2b699c35b48bd][0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group_attachment.lbtga[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group_attachment.lbtga[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb_listener.httplistener[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group_attachment.lbtga[1]: Creation complete after 0s [id=arn:aws:elasticloadbalancing:ca-central-1:428411933129:targetgroup/lb-tgrp-20230615060344-2-0/8ea154e411c5f2aa-20230615060613458600000003][0m
[0m[1mmodule.MultiZone2[0].aws_lb_target_group_attachment.lbtga[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:ca-central-1:428411933129:targetgroup/lb-tgrp-20230615060344-2-0/8ea154e411c5f2aa-20230615060613884300000004][0m
[0m[1mmodule.MultiZone2[0].aws_lb_listener.httplistener[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:ca-central-1:428411933129:listener/app/alb-20230615060344-2-0/9ef2b699c35b48bd/7c7873e74ee092f5][0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.MultiZone[0].aws_lb.alb[0]: Creation complete after 2m16s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:loadbalancer/app/alb-20230615060344-0-0/9ee2e3e5f1a6a7de][0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[2]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[1]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].aws_lb_listener.httplistener[0]: Creating...[0m[0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:targetgroup/lb-tgrp-20230615060344-0-0/098bca20ec595a6b-20230615060705564600000006][0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[1]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:targetgroup/lb-tgrp-20230615060344-0-0/098bca20ec595a6b-20230615060705995600000007][0m
[0m[1mmodule.MultiZone[0].aws_lb_target_group_attachment.lbtga[2]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:targetgroup/lb-tgrp-20230615060344-0-0/098bca20ec595a6b-20230615060706401800000008][0m
[0m[1mmodule.MultiZone[0].aws_lb_listener.httplistener[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:428411933129:listener/app/alb-20230615060344-0-0/9ee2e3e5f1a6a7de/6c64fe8e87d7c39f][0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating EC2 Instance: Unsupported: Your requested instance type (t2.small) is not supported in your requested Availability Zone (ap-northeast-3c). Please retry your request by not specifying an Availability Zone or choosing ap-northeast-3a.
[31m│[0m [0m	status code: 400, request id: c6698bf4-75eb-4dca-a49e-00de7d75883a[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with module.MultiZone1[0].module.SingleZone.aws_instance.instance[2],
[31m│[0m [0m  on ../SingleZone/resources.tf line 131, in resource "aws_instance" "instance":
[31m│[0m [0m 131: resource "aws_instance" "instance" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating EC2 Instance: Unsupported: Your requested instance type (t2.small) is not supported in your requested Availability Zone (ap-northeast-3b). Please retry your request by not specifying an Availability Zone or choosing ap-northeast-3a.
[31m│[0m [0m	status code: 400, request id: 11bc3030-edd9-4849-bc3b-cdb4b8aa7371[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with module.MultiZone1[0].module.SingleZone.aws_instance.instance[1],
[31m│[0m [0m  on ../SingleZone/resources.tf line 131, in resource "aws_instance" "instance":
[31m│[0m [0m 131: resource "aws_instance" "instance" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[8mha:////4JFR6rNPhMgdcLAWmYzl/rNn+rxWumtYn/cCQEOQ1neUAAAApB+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJSoFSIitZKwwtMYowd686xHZyKF/E1/kAgEhVbrHa2mecL1jHAkYNGq6g3FFuD3o16Xpg59FfHGS1fsGWK7BQ2KjfcqdOCDScFS4oSVgI2ilrH0ZBOsBVW3mXlJOnqnML8HQSUphvgAYWYzUmG9IUpwO42dpHp5/krgMn7BGVdf2r/BqeGDU++AAAA[0m[Pipeline] }
[8mha:////4DCRInQCe29mVCNalpRWP9Tp6z8pOmRHm7WQKOSWenFxAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiIUGDqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFDu9p/avgGfxJ6+vgAAAA==[0m[Pipeline] // withCredentials
[8mha:////4NRHRMLxaD/Li7frIFvPhQp1BNP6bjpEJXzTFeYH0EzQAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiCkSBqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFDu9p/avgGARsvsvgAAAA==[0m[Pipeline] }
[8mha:////4MnKvGaOxOHUgRg2QUWMLPJk7P4C49CRtGU1Aku56sPtAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJCg4SEqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFDu9p/avgHDxJpqvgAAAA==[0m[Pipeline] // withEnv
[8mha:////4GG6O5Zn00nzN9hguAFCfcMQo1ts25iB5SgwX35g1oWBAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOLSgBBCqWgtN7zAJMY4se6C7eBUvIiv8QcsIlGxxWpnm3m9YRk81OwNdpp6S6GxOLjR5IWJfX91nLDjCzZMgZ1GqZPkVp9mlBw1zClKWAhYaWocB0smwlp06qEqp8hU5+jzdxRQ2vYOTyhENkfl4xcmD5vb2Aamn+evAKZhiFDuDrm2+w+Es7kmvgAAAA==[0m[Pipeline] }
[8mha:////4KCs1gsKzKqxGu6idQIXN+L7SVyKi5T6BORUOZjBRm5yAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOJCgdIgqrRWGl5gYmOcWHfGdkgqXsTX+AMWkajYYrWzzbzesI4BThwM9poGS7Gz6N1o8sKJw3B1PGHPF+yYIjuNrZ5aVrpZsOWkYUlRwkrARlPnOFoyCbailw9ZOUmmOqeQv6OA0qo7PKEQ2ZxkSF+YA+xuo4pMP89fAczeJyjrfa5D/QFHyFlHvgAAAA==[0m[Pipeline] // stage
[8mha:////4HwtuxZCNGuOMPpgWG5t1nl+2YY+u6JqyPV5V20feTvCAAAAqB+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUXZAQYuoadeEEoQkhafR/SVLSiRNxNe5AoBITHizbkvWeL6iChyN5zazCwWDoDRvdpHNiifxwcZSYpTPrCQM5xTqVOpKqXWpHUcGiooQVh7XC3lEwqCNsuBV3UTuBuj5Fn7cDh9LIGzyg4JkchY/fMnvYXicZCH+cvwCYxwhls8+2az7P6g0KoVpiwgAAAA==[0m[Pipeline] stage
[8mha:////4H+jULOSAE+AaD8kUOC5lE6toNPRMUkIMU8W4LdL45QIAAAApx+LCAAAAAAAAP9tjTEOwjAUQ3+LOrAycohUMLAgpq5RFk4QmhDSRv+Xn5R24kRcjTvQUokJD5ZtyXqvNxSR4UTsRGOx9RhrL7rQuymJgbi9BhpEQxdRE0YKVig7KDK2WqqiZGFRlsNKwtpiHSh6dAk2stEPXQaNrjwnnrajhNybOzwhkxM5aU7fMjJsb72JhD/OXwCMXYL8sJttPz+LD27blSrCAAAA[0m[Pipeline] { (Terraform output)
Stage "Terraform output" skipped due to earlier failure(s)
[8mha:////4JML/BRzc7UdPYo151Z2M4crCs7xKf0wFBocNMBct0oDAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIigUSDqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFDud5/avgFyHJb0vgAAAA==[0m[Pipeline] }
[8mha:////4PJfm+T5e0WpGaO5HbYbX4cnbyqirOE3g5MPED0I8AO+AAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiJESDqNJabniBiY1xYt0Z2yGpeBFf4w8EIlGxxWpnm3m+YJkiHDlabA11jlLjMPjeTgsHjt3F84Atn7FhSuwNSjNI1qaeUXI2MKcoYSFgZajxnBzZDGvRqruqvCJbnXKcvoOA0ukbPKAQkzmrmL8wRthce52Yfp6/AhhDyFDud5/avgFwfZpwvgAAAA==[0m[Pipeline] // stage
[8mha:////4F2AW+lHhZ15ci+nDasF6BVaNh65iHXM9sn604PgjyoqAAAAph+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOIiCpAQSkVrueEFJjHGiXUXbAen4kV8jT9gEYmKLVY728zrDcvgoWZvsNPUWwqNxcGNJi9M7Pur44QdX7BhCuw0Sp0kt/o0o+SoYU5RwkLASlPjOFgyEdaiUw9VOUWmOkefv6OA0rZ3eEIhsjkqH78wedjcxjYw/Tx/BTANQ4Ryv8u1PXwAILBc+r4AAAA=[0m[Pipeline] }
[8mha:////4DakDWBD3a8mLJSp4EjKt2bugQR2UFZb585ZmM/6CXhwAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPMIRTYSEqNJaaXiBiQ/jxLoztkNS8SK+xh+wiETFFqudbeb1hnUMcOJgRI80WIqdFd6NJi8xcRiujifR80V0TJEdihanljU2C7acEJYUJawkbJA6x9GSSbCVvXqoyiky1TmF/B0llFbf4QmFzOakQvrCHGB3G3Vk+nn+CmD2PkFZ17n2hw8Y8s8LvgAAAA==[0m[Pipeline] // withEnv
[8mha:////4Ij8N48n/0usRP9HHqeoT9guuiWuizienVhIUAwV1If6AAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOKiNFAgqrRWGl5gYmOcWHfGdkgqXsTX+AMWkajYYrWzzbzesI4BThwM9poGS7Gz6N1o8sKJw3B1PGHPF+yYIjuNrZ5aVrpZsOWkYUlRwkrARlPnOFoyCbailw9ZOUmmOqeQv6OA0qo7PKEQ2ZxkSF+YA+xuo4pMP89fAczeJyj3h1x1/QEZmU+5vgAAAA==[0m[Pipeline] }
[8mha:////4KE5v9UyWOiJseopJOA8CdQE89MgrfEQGAlwawkv0CkPAAAApR+LCAAAAAAAAP9tjTEOwjAQBC9BFLSUPOICDUJCqWgtN7zAJMY4se6C7eBUvIiv8QcsIlGxxWpnm3m9YRk81OwNdpp6S6GxOLjR5IWJfX91nLDjCzZMgZ1GqZPkVp9mlBw1zClKWAhYaWocB0smwlp06qEqp8hU5+jzdxRQ2vYOTyhENkfl4xcmD5vb2Aamn+evAKZhiFDuD7l22w9aGx4/vgAAAA==[0m[Pipeline] // withEnv
[8mha:////4B9uWKqoMJq74aVGoyyhvDxGhYi8cD7wJQZfGWz7ZCzGAAAApB+LCAAAAAAAAP9tjTEOwjAQBDdBFLSUPMJpEBJCVLRWGl5gEmOcWHfBvpBUvIiv8QciIlGx1c4083pjmSKOHJ1qLLWeUuVVF3o3PTVwbK+BB9XwRVVMiYNVpR1Kru1pxpLFYl6WY6GxslQFTp6cYK0b8zBFMOSKs8TJHTRyX9/xRKanspgoXxgjNre+Tky/zt8Axq4T5Lu9INt+AEx5UMK9AAAA[0m[Pipeline] }
[8mha:////4KJwL8b5vRdr67HyoGrOmQjjn5IRrpRLErxuKtTP2DDXAAAApB+LCAAAAAAAAP9tjTEOwjAQBDdBFLSUPMJBoqBAVLRWGl5gEmOcWHfBvpBUvIiv8QciIlGx1c4083pjmSKOHJ1qLLWeUuVVF3o3PTVwbK+BB9XwRVVMiYNVpR1Kru1pxpLFYl6WY6GxslQFTp6cYK0b8zBFMOSKs8TJHTRyX9/xRKanspgoXxgjNre+Tky/zt8Axq4T5PutINt9ADtdeJq9AAAA[0m[Pipeline] // node
[8mha:////4ED+ZdpOu8Iiad5H/rbXhltTlymQqWTihEYBQERDkhfKAAAAox+LCAAAAAAAAP9tjTEOwjAQBDdBFLSUPMIRNBSIitZKwwtMYowT6y7YF5KKF/E1/kBEJCq22plmXm8sU8SRo1ONpdZTqrzqQu+mpwaO7TXwoBq+qIopcbCqtEPJtT3NWLJYzMtyLDRWlqrAyZMTrHVjHqYIhlxxlji5g0bu6zueyPRUFhPlC2PE5tbXienX+RvA2HWCfL8VZLsPHUQf0L0AAAA=[0m[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
